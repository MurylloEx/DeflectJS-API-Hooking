const DEFLECT_PRE_OPERATION_HOOK=1,DEFLECT_OVERWRITTEN_HOOK=2,DEFLECT_POST_OPERATION_HOOK=4,DEFLECT_NATIVE_PRE_OPERATION_HOOK=8,DEFLECT_NATIVE_OVERWRITTEN_HOOK=16,DEFLECT_NATIVE_POST_OPERATION_HOOK=32,DEFLECT_STATE_WAITING=1,DEFLECT_STATE_HOOKED=2,DEFLECT_STATE_FAILED=4,DEFLECT_STATE_ENQUEUED=8,DEFLECT_STATE_UNHOOKED=16,DEFLECT_STATE_DEQUEUED=32;function deflect_create_hook(t,E,e,n){let _,T=t;switch(void 0!==n&&null!=n||(n=window),void 0===e&&(e=DEFLECT_OVERWRITTEN_HOOK),e){case DEFLECT_PRE_OPERATION_HOOK:_=function(){return E.apply(this,arguments),t.apply(this,arguments)};break;case DEFLECT_OVERWRITTEN_HOOK:_=function(){return E.apply(this,arguments)};break;case DEFLECT_POST_OPERATION_HOOK:_=function(){let e=t.apply(this,arguments);return E.apply(this,arguments),e};break;default:_=function(){return E.apply(this,arguments)}}return Object.defineProperty(_,"name",{value:T.name}),{OriginalFunction:T,OriginalFunctionName:T.name,NewFunction:E,Parent:n,HookType:e,HookState:DEFLECT_STATE_WAITING,HookStub:_,PatchAddr:t,Guid:null}}function deflect_create_native_hook(t,E,e,n){let _=t,T={OriginalFunction:_,OriginalFunctionName:_.name,NewFunction:E,Parent:n,HookType:e,HookState:DEFLECT_STATE_WAITING,HookStub:function(){},PatchAddr:t,Guid:null};switch(void 0!==n&&null!=n||(n=window,T.Parent=n),void 0===e&&(e=DEFLECT_NATIVE_OVERWRITTEN_HOOK),T.HookType){case DEFLECT_NATIVE_PRE_OPERATION_HOOK:T.HookStub=function(){E.apply(this,arguments),deflect_unpatch_original(T);let t=T.Parent[T.OriginalFunctionName].apply(this,arguments);return deflect_patch_original(T),t},T.OriginalFunction=function(){deflect_unpatch_original(T);let t=_.apply(this,arguments);return deflect_patch_original(T),t};break;case DEFLECT_NATIVE_OVERWRITTEN_HOOK:T.HookStub=function(){return E.apply(this,arguments)},T.OriginalFunction=function(){deflect_unpatch_original(T);let t=_.apply(this,arguments);return deflect_patch_original(T),t};break;case DEFLECT_NATIVE_POST_OPERATION_HOOK:T.HookStub=function(){deflect_unpatch_original(T);let t=T.Parent[T.OriginalFunctionName].apply(this,arguments);return deflect_patch_original(T),E.apply(this,arguments),t},T.OriginalFunction=function(){deflect_unpatch_original(T);let t=_.apply(this,arguments);return deflect_patch_original(T),t};break;default:T.HookStub=function(){return E.apply(this,arguments)},T.OriginalFunction=function(){deflect_unpatch_original(T);let t=_.apply(this,arguments);return deflect_patch_original(T),t}}return Object.defineProperty(T.HookStub,"name",{value:_.name}),T}function deflect_generate_guid(){let t="0123456789abcdef",E="";for(let e=0;e<8;e++)E+=t.charAt(Math.floor(Math.random()*t.length));E+="-";for(let e=0;e<3;e++){for(let e=0;e<4;e++)E+=t.charAt(Math.floor(Math.random()*t.length));E+="-"}for(let e=0;e<12;e++)E+=t.charAt(Math.floor(Math.random()*t.length));return E.toUpperCase()}function deflect_enqueue_hook(t,E){if(void 0===E)return t.HookState=DEFLECT_STATE_FAILED,DEFLECT_STATE_FAILED;null==E&&(E=[],t.Guid=deflect_generate_guid());let e,n=!0;for(;n;){n=!1,e=deflect_generate_guid();for(let t=0;t<E.length;t++)E[t].Guid==e&&(n=!0)}return t.Guid=e,t.HookState=DEFLECT_STATE_ENQUEUED,E.push(t),DEFLECT_STATE_ENQUEUED}function deflect_dequeue_hook(t,E){for(let e=0;e<E.length;e++)if(E[e].Guid==t)return E.splice(e,1),E[e].HookState=DEFLECT_STATE_DEQUEUED,DEFLECT_STATE_DEQUEUED;return DEFLECT_STATE_FAILED}function deflect_attach_hook(t){if(void 0===t||null==t)return DEFLECT_STATE_FAILED;for(let E=0;E<t.length;E++)t[E].Parent[t[E].OriginalFunctionName]=t[E].HookStub,t[E].HookState=DEFLECT_STATE_HOOKED;return DEFLECT_STATE_HOOKED}function deflect_detach_hook(t){if(void 0===t||null==t)return DEFLECT_STATE_FAILED;for(let E=0;E<t.length;E++)t[E].Parent[t[E].OriginalFunctionName]=t[E].OriginalFunction,t[E].HookState=DEFLECT_STATE_UNHOOKED;return DEFLECT_STATE_UNHOOKED}function deflect_patch_original(t){return t.HookType!=DEFLECT_NATIVE_PRE_OPERATION_HOOK&&t.HookType!=DEFLECT_NATIVE_OVERWRITTEN_HOOK&&t.HookType!=DEFLECT_NATIVE_POST_OPERATION_HOOK?(t.HookState=DEFLECT_STATE_FAILED,DEFLECT_STATE_FAILED):(t.OriginalFunction=t.Parent[t.OriginalFunctionName],t.Parent[t.OriginalFunctionName]=t.HookStub,t.HookState=DEFLECT_STATE_HOOKED,DEFLECT_STATE_HOOKED)}function deflect_unpatch_original(t){return t.HookType!=DEFLECT_NATIVE_PRE_OPERATION_HOOK&&t.HookType!=DEFLECT_NATIVE_OVERWRITTEN_HOOK&&t.HookType!=DEFLECT_NATIVE_POST_OPERATION_HOOK?(t.HookState=DEFLECT_STATE_FAILED,DEFLECT_STATE_FAILED):(t.HookStub=t.Parent[t.OriginalFunctionName],t.Parent[t.OriginalFunctionName]=t.OriginalFunction,t.HookState=DEFLECT_STATE_UNHOOKED,DEFLECT_STATE_UNHOOKED)}